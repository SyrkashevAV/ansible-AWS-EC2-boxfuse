---
# tasks file for aws_create
- name: create a new ec2 key pair
  ec2_key:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    name: ec2_keypair
    region: "{{ region }}"
  register: keypair

- name: Copy EC2 Private Key locally so it can be later on used to SSH into the
    instance
  copy: content="{{ keypair.key.private_key }}" dest="{{ ec2_key_directory }}"key.ppk
  when: keypair.changed == true

- name: Create New security group
  local_action:
    module: ec2_group
    name: "{{ security_group }}"
    description: Security Group for Newly Created EC2 Instance
    region: "{{ region }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8080
        to_port: 8080
        cidr_ip: 0.0.0.0/0

- name: Launch ec2 instances
  tags: create_ec2
  ec2:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    key_name: "{{ keypair }}"
    vpc_subnet_id: "{{ vpc_subnet_id }}"
    instance_type: "{{ instance_type }}"
    security_group:
      - default
      - "{{ security_group }}"
    region: "{{ region }}"
    count: 2
    wait: true
    network:
      assign_public_ip: true
    image: "{{ image }}"
    state: present
    instance_tags:
      name: '{ "Name":"{{ hostname }}" }'
      os: ubuntu
    assign_public_ip: yes
    monitoring: no
  register: ec2
  delegate_to: localhost

- name: Wait for EC2 Instance to Spin-up and ready for SSH access
  wait_for:
    host: "{{ item.public_ip }}"
    delay: 60
    port: 22
    timeout: 320
    state: started
  with_items: "{{ ec2.instances }}"
  when: item.state != "terminated"

- name: Create in-memory Ansible inventory
  add_host:
    name: "{{ item.server.public_v4 }}"
    groups: none
    instance_name: "{{ item.server.name }}"
  with_items: ec2.instances
  when: item.state != "terminated"

- name: Assigning an IP address to an assembly machine
  debug:
    var: item.server.public_v4[0]
  register: staging

- name: Assigning an IP address to a production machine
  debug:
    var: item.server.public_v4[1]
  register: production

- name: Add a new user named "devops"
  user:
    name: devops
    password: "{{ aws_password }}"

- name: Add devops user to the sudiers
  copy:
    dest: /etc/sudoers.d/devops
    content: "devops  ALL=(ALL)  NOPASSWD:  ALL"

- name: Deploy SSH key
  authorized_key:
    user: devops
    key: "{{ lookup('file', '~/.ssh/id_rsa.pub')}}"
    state: present

- name: Disable Password Authentication
  lineinfine:
    dest: /etc/ssh/sshd_config
    regexp: ^PasswordAuthentication
    line: PasswordAuthenticatin no
    state: present
    backup: yes

- name: Disable Root login
  lineinfine:
    dest: /etc/ssh/sshd_config
    regexp: ^PermitRootLogin
    line: PermitRootLogin no
    state: present
    backup: yes

  notify:
    - restart ssh
